import{_ as i,a,o as t,ag as e}from"./chunks/framework.C2qfZH9T.js";const c=JSON.parse('{"title":"Creating Your First Product Type","description":"","frontmatter":{},"headers":[],"relativePath":"product-type-development/create-your-first-product-type.md","filePath":"product-type-development/create-your-first-product-type.md","lastUpdated":1757662011000}'),n={name:"product-type-development/create-your-first-product-type.md"};function p(l,s,r,h,o,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="creating-your-first-product-type" tabindex="-1">Creating Your First Product Type <a class="header-anchor" href="#creating-your-first-product-type" aria-label="Permalink to &quot;Creating Your First Product Type&quot;">​</a></h1><p>Let&#39;s create a custom product type using Bagisto&#39;s manual setup approach. We&#39;ll build everything from scratch to give you complete understanding of how product types work.</p><div class="info custom-block"><p class="custom-block-title">What You&#39;ll Learn</p><p>This guide covers the complete process of creating a <strong>Subscription Product</strong> type, including:</p><ul><li>Package structure setup (manual approach)</li><li>Configuration file creation</li><li>Product type class implementation</li><li>Admin interface integration</li></ul></div><h2 id="manual-setup-complete-understanding" tabindex="-1">Manual Setup (Complete Understanding) <a class="header-anchor" href="#manual-setup-complete-understanding" aria-label="Permalink to &quot;Manual Setup (Complete Understanding)&quot;">​</a></h2><p>Since Bagisto doesn&#39;t have a package generator for product types, we&#39;ll create everything manually. This approach teaches you every component by building from scratch.</p><h3 id="step-1-create-package-structure" tabindex="-1">Step 1: Create Package Structure <a class="header-anchor" href="#step-1-create-package-structure" aria-label="Permalink to &quot;Step 1: Create Package Structure&quot;">​</a></h3><p>Create the package directory structure:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/Webkul/SubscriptionProduct/src/{Type,Config,Providers}</span></span></code></pre></div><h3 id="step-2-configure-product-type" tabindex="-1">Step 2: Configure Product Type <a class="header-anchor" href="#step-2-configure-product-type" aria-label="Permalink to &quot;Step 2: Configure Product Type&quot;">​</a></h3><p>Create <code>packages/Webkul/SubscriptionProduct/src/Config/product-types.php</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;subscription&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;key&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;class&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Webkul\\SubscriptionProduct\\Type\\Subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;sort&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h3 id="step-3-create-product-type-class" tabindex="-1">Step 3: Create Product Type Class <a class="header-anchor" href="#step-3-create-product-type-class" aria-label="Permalink to &quot;Step 3: Create Product Type Class&quot;">​</a></h3><p>Create <code>packages/Webkul/SubscriptionProduct/src/Type/Subscription.php</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Webkul\\SubscriptionProduct\\Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Product\\Helpers\\Indexers\\Price\\Simple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimpleIndexer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Product\\Type\\AbstractType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Subscription</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AbstractType</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Returns price indexer class for a specific product type.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPriceIndexer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // SimpleIndexer extends AbstractIndexer, so it handles basic price indexing</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // You can keep this as-is for most custom product types</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleIndexer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Implementation Notes</p><p>This basic implementation includes the essential <code>getPriceIndexer()</code> method that all product types need for proper price indexing. The <code>SimpleIndexer</code> class extends <code>AbstractIndexer</code> and handles standard price calculations - you can keep this as-is for most custom product types.</p><p>You can then override additional methods step by step according to your subscription-based product requirements:</p><ul><li><strong>isStockable()</strong>: Define if products use inventory tracking</li><li><strong>showQuantityBox()</strong>: Control quantity input display</li><li><strong>haveSufficientQuantity()</strong>: Custom availability logic</li><li><strong>isSaleable()</strong>: Custom saleable conditions</li><li><strong>prepareForCart()</strong>: Add subscription-specific cart data</li></ul><p>See the <a href="./understanding-abstract-type-class.html">Understanding Abstract Type Class →</a> section for detailed method explanations.</p></div><h3 id="step-4-create-service-provider" tabindex="-1">Step 4: Create Service Provider <a class="header-anchor" href="#step-4-create-service-provider" aria-label="Permalink to &quot;Step 4: Create Service Provider&quot;">​</a></h3><p>Create <code>packages/Webkul/SubscriptionProduct/src/Providers/SubscriptionServiceProvider.php</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Webkul\\SubscriptionProduct\\Providers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SubscriptionServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServiceProvider</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Register services.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Merge product type configuration</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mergeConfigFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__DIR__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/Config/product-types.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;product_types&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Bootstrap services.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> boot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="step-5-register-your-package" tabindex="-1">Step 5: Register Your Package <a class="header-anchor" href="#step-5-register-your-package" aria-label="Permalink to &quot;Step 5: Register Your Package&quot;">​</a></h3><p>After creating all the files, you need to register your package with Bagisto:</p><p><strong>Add to composer.json</strong> (in Bagisto root directory):</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;autoload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;psr-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Other PSR-4 namespaces</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;Webkul\\\\SubscriptionProduct\\\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;packages/Webkul/SubscriptionProduct/src&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>Update autoloader:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dump-autoload</span></span></code></pre></div><p><strong>Register service provider</strong> in <code>bootstrap/providers.php</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    App\\Providers\\AppServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... other providers ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Webkul\\SubscriptionProduct\\Providers\\SubscriptionServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p><strong>Clear caches:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize:clear</span></span></code></pre></div><h3 id="step-6-test-your-product-type" tabindex="-1">Step 6: Test Your Product Type <a class="header-anchor" href="#step-6-test-your-product-type" aria-label="Permalink to &quot;Step 6: Test Your Product Type&quot;">​</a></h3><p>After completing the setup, let&#39;s test your subscription product type:</p><h3 id="_1-admin-interface-test" tabindex="-1">1. Admin Interface Test <a class="header-anchor" href="#_1-admin-interface-test" aria-label="Permalink to &quot;1. Admin Interface Test&quot;">​</a></h3><ol><li><strong>Navigate to Products</strong>: Go to Admin → Catalog → Products</li><li><strong>Create New Product</strong>: Click &quot;Add Product&quot;</li><li><strong>Select Type</strong>: Choose &quot;Subscription&quot; from the dropdown</li><li><strong>Verify Fields</strong>: Check that subscription-specific fields appear</li><li><strong>Save Product</strong>: Complete the product creation process</li></ol><h3 id="_2-frontend-validation" tabindex="-1">2. Frontend Validation <a class="header-anchor" href="#_2-frontend-validation" aria-label="Permalink to &quot;2. Frontend Validation&quot;">​</a></h3><ol><li><strong>Product Page</strong>: Visit the product page and verify display</li><li><strong>Add to Cart</strong>: Test cart functionality with different quantities</li><li><strong>Cart Behavior</strong>: Verify subscription data is preserved</li><li><strong>Checkout</strong>: Ensure checkout process works correctly</li></ol><h2 id="what-you-ve-built" tabindex="-1">What You&#39;ve Built <a class="header-anchor" href="#what-you-ve-built" aria-label="Permalink to &quot;What You&#39;ve Built&quot;">​</a></h2><p>Congratulations! You&#39;ve successfully created a basic subscription product type with:</p><h3 id="completed-components" tabindex="-1">Completed Components <a class="header-anchor" href="#completed-components" aria-label="Permalink to &quot;Completed Components&quot;">​</a></h3><ul><li>✅ <strong>Product Type Configuration</strong>: Registered subscription type with Bagisto</li><li>✅ <strong>Product Type Class</strong>: Basic subscription class extending AbstractType</li><li>✅ <strong>Service Provider</strong>: Properly registered the package with Bagisto</li><li>✅ <strong>Admin Integration</strong>: Product type appears in admin product creation</li></ul><h3 id="next-steps-for-customization" tabindex="-1">Next Steps for Customization <a class="header-anchor" href="#next-steps-for-customization" aria-label="Permalink to &quot;Next Steps for Customization&quot;">​</a></h3><p>Your basic product type is now functional! To make it truly subscription-specific, you can:</p><ol><li><strong>Override Methods</strong>: Add custom behavior by implementing methods in your Subscription class</li><li><strong>Add Validation</strong>: Implement subscription-specific validation rules</li><li><strong>Custom Pricing</strong>: Add subscription billing frequency and pricing logic</li><li><strong>Inventory Logic</strong>: Implement slot-based or service-based availability</li></ol><h2 id="what-s-next" tabindex="-1">What&#39;s Next? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s Next?&quot;">​</a></h2><p>Congratulations! You&#39;ve successfully created your first product type. Now you can dive deeper into understanding how each component works:</p><p><strong>📖 <a href="./understanding-product-type-configuration.html">Understanding Product Type Configuration →</a></strong><br> Learn how the configuration system defines your product type properties and behavior.</p><p><strong>📖 <a href="./understanding-abstract-type-class.html">Understanding AbstractType Class →</a></strong><br> Master the methods available for customizing product behavior and business logic.</p><p><strong>📖 <a href="./building-your-subscription-product-type.html">Building Your Subscription Product Type →</a></strong><br> See how to implement a complete, functional subscription product type with real business logic.</p><p>Your subscription product type is now ready for enhancement and customization!</p>`,47)]))}const g=i(n,[["render",p]]);export{c as __pageData,g as default};
