import{_ as e,a,o as i,ag as t}from"./chunks/framework.C2qfZH9T.js";const c=JSON.parse('{"title":"Email Template","description":"","frontmatter":{},"headers":[],"relativePath":"theme-development/email-template.md","filePath":"theme-development/email-template.md","lastUpdated":1759761869000}'),l={name:"theme-development/email-template.md"};function n(p,s,h,o,r,k){return i(),a("div",null,s[0]||(s[0]=[t(`<h1 id="email-template" tabindex="-1">Email Template <a class="header-anchor" href="#email-template" aria-label="Permalink to &quot;Email Template&quot;">​</a></h1><p>Email templates are a crucial part of your Bagisto theme, providing branded communication with your customers. This guide shows you how to customize email templates as part of your theme development workflow, building on the concepts covered in previous theme development sections.</p><h2 id="understanding-email-templates-in-themes" tabindex="-1">Understanding Email Templates in Themes <a class="header-anchor" href="#understanding-email-templates-in-themes" aria-label="Permalink to &quot;Understanding Email Templates in Themes&quot;">​</a></h2><p>Email templates in Bagisto follow the same theming principles as your storefront views. Just like regular theme views, email templates can be customized and organized within your theme structure to maintain consistency with your brand identity.</p><h3 id="email-template-architecture" tabindex="-1">Email Template Architecture <a class="header-anchor" href="#email-template-architecture" aria-label="Permalink to &quot;Email Template Architecture&quot;">​</a></h3><p>Bagisto&#39;s email system uses Laravel&#39;s Mailable classes combined with Blade templates, following the same view resolution patterns as your theme:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Theme Structure for Emails:</span></span>
<span class="line"><span>└── resources/themes/your-theme/</span></span>
<span class="line"><span>    └── views/</span></span>
<span class="line"><span>        └── emails/</span></span>
<span class="line"><span>            ├── ...</span></span>
<span class="line"><span>            ├── ...</span></span>
<span class="line"><span>            ├── ...</span></span>
<span class="line"><span>            └── layouts.blade.php</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Theme Integration</p><p>Email templates follow the same view resolution hierarchy as your theme views. When you customize an email template, it becomes part of your theme package, ensuring consistency across all customer touchpoints.</p></div><h2 id="email-template-flow" tabindex="-1">Email Template Flow <a class="header-anchor" href="#email-template-flow" aria-label="Permalink to &quot;Email Template Flow&quot;">​</a></h2><p>Email templates in Bagisto work through a system of Mailable classes and Blade views, similar to how your theme handles regular page views. Let&#39;s examine how this works:</p><h3 id="mailable-classes" tabindex="-1">Mailable Classes <a class="header-anchor" href="#mailable-classes" aria-label="Permalink to &quot;Mailable Classes&quot;">​</a></h3><p>Bagisto uses mail notification classes located in namespaces like <code>Webkul\\Shop\\Mail</code>. These classes extend Laravel&#39;s <code>Mailable</code> class and define the email&#39;s structure, recipient, and view template.</p><p>Here&#39;s an example from the order created notification:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Webkul\\Shop\\Mail\\Order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Mail\\Mailables\\Address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Mail\\Mailables\\Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Mail\\Mailables\\Envelope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Sales\\Contracts\\Order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webkul\\Shop\\Mail\\Mailable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreatedNotification</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mailable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Create a new message instance.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __construct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $order) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Get the message envelope.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> envelope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Envelope</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Envelope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customer_email,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customer_full_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            subject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;shop::app.emails.orders.created.subject&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Get the message content definition.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;shop::emails.orders.created&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="view-resolution" tabindex="-1">View Resolution <a class="header-anchor" href="#view-resolution" aria-label="Permalink to &quot;View Resolution&quot;">​</a></h3><p>The <code>view: &#39;shop::emails.orders.created&#39;</code> follows the same theme resolution pattern you learned about in <a href="/theme-development/creating-store-theme.html">Creating Store Theme</a>. Bagisto will look for this view in:</p><ol><li><strong>Your active theme</strong>: <code>resources/themes/your-theme/views/emails/orders/created.blade.php</code></li><li><strong>Default theme</strong>: <code>resources/themes/default/views/emails/orders/created.blade.php</code></li><li><strong>Package views</strong>: <code>packages/Webkul/Shop/src/Resources/views/emails/orders/created.blade.php</code></li></ol><h3 id="email-layout-system" tabindex="-1">Email Layout System <a class="header-anchor" href="#email-layout-system" aria-label="Permalink to &quot;Email Layout System&quot;">​</a></h3><p>Email templates use a layout component system similar to your theme layouts:</p><div class="language-blade vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">blade</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;shop::emails.layout&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@endcomponent</span></span></code></pre></div><p>The layout component (<code>shop::emails.layout</code>) provides the base HTML structure, styling, and branding for all emails, similar to how your theme&#39;s master layout works.</p><h2 id="customizing-email-templates" tabindex="-1">Customizing Email Templates <a class="header-anchor" href="#customizing-email-templates" aria-label="Permalink to &quot;Customizing Email Templates&quot;">​</a></h2><p>Now let&#39;s learn how to customize email templates as part of your theme development. This process follows the same patterns you&#39;ve learned for customizing other theme views.</p><h3 id="method-1-theme-based-customization-recommended" tabindex="-1">Method 1: Theme-Based Customization (Recommended) <a class="header-anchor" href="#method-1-theme-based-customization-recommended" aria-label="Permalink to &quot;Method 1: Theme-Based Customization (Recommended)&quot;">​</a></h3><p>This approach integrates email customization into your theme structure, making it part of your overall theme package.</p><h4 id="step-1-create-email-views-in-your-theme" tabindex="-1">Step 1: Create Email Views in Your Theme <a class="header-anchor" href="#step-1-create-email-views-in-your-theme" aria-label="Permalink to &quot;Step 1: Create Email Views in Your Theme&quot;">​</a></h4><p>Create the email template structure within your theme directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create email directories in your theme</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> resources/themes/your-theme/views/emails</span></span></code></pre></div><h4 id="step-2-override-specific-email-templates" tabindex="-1">Step 2: Override Specific Email Templates <a class="header-anchor" href="#step-2-override-specific-email-templates" aria-label="Permalink to &quot;Step 2: Override Specific Email Templates&quot;">​</a></h4><p>Let&#39;s customize the order created email. Create the file:</p><p><strong><code>resources/themes/your-theme/views/emails/orders/created.blade.php</code></strong></p><div class="warning custom-block"><p class="custom-block-title">Path Matching Requirement</p><p>Notice the path we have used: <code>emails/orders/created.blade.php</code>. This path is exactly the same as in the shop package (<code>packages/Webkul/Shop/src/Resources/views/emails/orders/created.blade.php</code>). We must follow the exact same path structure for view overriding to work. If you use a different path, the view will not be able to override the default template.</p></div><div class="language-blade vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">blade</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;shop::emails.layout&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;This is customized order email.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@endcomponent</span></span></code></pre></div><h4 id="step-3-customize-the-email-layout" tabindex="-1">Step 3: Customize the Email Layout <a class="header-anchor" href="#step-3-customize-the-email-layout" aria-label="Permalink to &quot;Step 3: Customize the Email Layout&quot;">​</a></h4><p>Create a custom email layout for your theme:</p><p><strong><code>resources/themes/your-theme/views/emails/layouts.blade.php</code></strong></p><div class="warning custom-block"><p class="custom-block-title">Path Matching Requirement</p><p>Notice the path we have used: <code>emails/layouts.blade.php</code>. This path must match the layout reference used in email templates. The layout component <code>@component(&#39;shop::emails.layout&#39;)</code> will look for this file in the exact path structure for view overriding to work.</p></div><div class="info custom-block"><p class="custom-block-title">Layout Override</p><p>We are assuming you will change the layout to match your theme design, so we keep it as it is for now. You can customize the HTML structure, styling, and branding according to your theme requirements.</p></div><div class="language-blade vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">blade</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ... existing layout code ... --&gt;</span></span></code></pre></div><h3 id="method-2-package-based-customization" tabindex="-1">Method 2: Package-Based Customization <a class="header-anchor" href="#method-2-package-based-customization" aria-label="Permalink to &quot;Method 2: Package-Based Customization&quot;">​</a></h3><p>If you&#39;re developing a theme package (as covered in <a href="/theme-development/creating-custom-theme-package.html">Creating Custom Theme Package</a>), email template customization follows the same principles as Method 1.</p><div class="tip custom-block"><p class="custom-block-title">Package Structure</p><p>Simply place your email templates in your package&#39;s <code>src/Resources/views/emails/</code> directory following the same path structure:</p><ul><li><code>src/Resources/views/emails/orders/created.blade.php</code></li><li><code>src/Resources/views/emails/layouts.blade.php</code></li></ul></div><p>The view registration and override mechanics work exactly the same way - Laravel&#39;s view resolution will automatically find your package&#39;s email templates when the corresponding views are requested.</p><p>For detailed package development setup, refer to the <a href="/theme-development/creating-custom-theme-package.html">Creating Custom Theme Package</a> guide.</p>`,44)]))}const m=e(l,[["render",n]]);export{c as __pageData,m as default};
