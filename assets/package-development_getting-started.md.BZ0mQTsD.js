import{_ as a,a as e,o as i,ag as n}from"./chunks/framework.C2qfZH9T.js";const k=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"package-development/getting-started.md","filePath":"package-development/getting-started.md","lastUpdated":1759842771000}'),t={name:"package-development/getting-started.md"};function l(p,s,r,o,h,c){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">â€‹</a></h1><p>A package is a self-contained module that encapsulates specific features or functionality, allowing developers to add custom features without altering the core codebase. This approach not only preserves the integrity of the core system but also ensures that updates and maintenance can be carried out smoothly.</p><p>By developing packages, you can introduce new functionalities, integrate third-party services, or customize existing features to better meet your business requirements. Each package is isolated, promoting clean code practices and enabling easier debugging and testing.</p><p>To provide you with a practical understanding of package development, we&#39;ll be building a basic <strong>RMA (Return Merchandise Authorization)</strong> package throughout this documentation. This will demonstrate real-world implementation patterns and show you how different components work together.</p><p>The RMA package will include:</p><ul><li>Customer return request functionality</li><li>Admin panel for managing returns</li><li>Email notifications</li><li>Basic reporting features</li></ul><div class="warning custom-block"><p class="custom-block-title">Demonstration Purpose</p><p>This RMA package is designed for educational purposes to demonstrate package development concepts. It includes only basic CRUD operations and simplified workflows. For production use, you would need to implement additional features like complex business rules, advanced security measures, and comprehensive error handling.</p></div><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">â€‹</a></h2><p>Before getting started with package development, ensure you have:</p><ul><li>A working <a href="/getting-started/installation.html#ðŸš€-quick-installation-recommended">Bagisto Application</a></li><li>Basic knowledge of <a href="https://laravel.com/docs" target="_blank" rel="noreferrer">Laravel Framework</a></li><li>Understanding of <a href="https://www.php.net/manual/" target="_blank" rel="noreferrer">PHP</a> and Object Oriented Programming</li></ul><h2 id="using-bagisto-package-generator" tabindex="-1">Using Bagisto Package Generator <a class="header-anchor" href="#using-bagisto-package-generator" aria-label="Permalink to &quot;Using Bagisto Package Generator&quot;">â€‹</a></h2><p>To facilitate package development, you can use the <a href="https://github.com/bagisto/bagisto-package-generator" target="_blank" rel="noreferrer">Bagisto Package Generator</a>. Follow the steps below to install it:</p><div class="tip custom-block"><p class="custom-block-title">Package Generator Benefits</p><p>The <a href="https://github.com/bagisto/bagisto-package-generator" target="_blank" rel="noreferrer">Bagisto Package Generator</a> automatically creates the necessary directory structure, service providers, and configuration files, saving you time and ensuring consistency across packages.</p></div><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">â€‹</a></h3><p>Install the <a href="https://github.com/bagisto/bagisto-package-generator" target="_blank" rel="noreferrer">Bagisto Package Generator</a> by running the following command in the root folder of your Bagisto application:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bagisto/bagisto-package-generator</span></span></code></pre></div><h3 id="creating-a-package" tabindex="-1">Creating a Package <a class="header-anchor" href="#creating-a-package" aria-label="Permalink to &quot;Creating a Package&quot;">â€‹</a></h3><p>Once installed, you can generate your package using the following command:</p><div class="info custom-block"><p class="custom-block-title">Example Package</p><p>We will assume that the package name is <strong>&quot;RMA&quot;</strong> (Return Merchandise Authorization) for demonstration purposes.</p></div><ul><li><p>If the package directory does not exist:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package:make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Webkul/RMA</span></span></code></pre></div></li><li><p>If the package directory already exists, you can use the <code>--force</code> option to overwrite it:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package:make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Webkul/RMA</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div></li></ul><p>This command will set up the necessary files and directories in the <code>packages</code> directory.</p><h3 id="registering-your-package" tabindex="-1">Registering Your Package <a class="header-anchor" href="#registering-your-package" aria-label="Permalink to &quot;Registering Your Package&quot;">â€‹</a></h3><p>To register your package, follow these steps:</p><h4 id="update-composer-autoloader" tabindex="-1">Update Composer Autoloader <a class="header-anchor" href="#update-composer-autoloader" aria-label="Permalink to &quot;Update Composer Autoloader&quot;">â€‹</a></h4><p>Add your package&#39;s namespace to the <code>psr-4</code> section in the <code>composer.json</code> file located in the root directory of your Bagisto application. Update it as follows:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;autoload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;psr-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Other PSR-4 namespaces</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Webkul\\\\RMA\\\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;packages/Webkul/RMA/src&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Run the following command to regenerate the autoloader files:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dump-autoload</span></span></code></pre></div><p>This ensures that the new namespace mapping is properly loaded by Composer&#39;s autoloader.</p><h4 id="register-service-provider" tabindex="-1">Register Service Provider <a class="header-anchor" href="#register-service-provider" aria-label="Permalink to &quot;Register Service Provider&quot;">â€‹</a></h4><p>Register your package&#39;s service provider in the <code>bootstrap/providers.php</code> file located in the root directory of your Bagisto application. Add the following line <code>Webkul\\RMA\\Providers\\RMAServiceProvider::class,</code> just like other Bagisto service providers:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Application service providers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    App\\Providers\\AppServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Webkul&#39;s service providers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * RMA service providers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Webkul\\RMA\\Providers\\RMAServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h4 id="final-setup-commands" tabindex="-1">Final Setup Commands <a class="header-anchor" href="#final-setup-commands" aria-label="Permalink to &quot;Final Setup Commands&quot;">â€‹</a></h4><p>Run the following command to clear the application cache:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize:clear</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Success</p><p>Congratulations! Your RMA package is now successfully registered and ready for development. The package generator has automatically configured the basic structure, routes, and admin menu - you should now be able to see the RMA menu in the admin navigation panel. You can now start building the RMA functionality step by step according to your requirements.</p></div><h2 id="manual-setup-of-files" tabindex="-1">Manual Setup of Files <a class="header-anchor" href="#manual-setup-of-files" aria-label="Permalink to &quot;Manual Setup of Files&quot;">â€‹</a></h2><p>If you prefer to set up your package manually, follow these steps assuming you are familiar with package directory structures and workflows. We&#39;ll use the default <code>package</code> folder in Bagisto as an example.</p><div class="warning custom-block"><p class="custom-block-title">Manual Setup</p><p>Manual setup requires good understanding of Laravel package development. If you&#39;re new to this, consider using the <a href="#using-bagisto-package-generator">Package Generator</a> method above.</p></div><h3 id="create-package-directory" tabindex="-1">Create Package Directory <a class="header-anchor" href="#create-package-directory" aria-label="Permalink to &quot;Create Package Directory&quot;">â€‹</a></h3><p>Inside the <code>packages/Webkul</code> folder, create a folder with your package name. Your structure should look like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>â””â”€â”€ packages</span></span>
<span class="line"><span>    â””â”€â”€ Webkul</span></span>
<span class="line"><span>        â””â”€â”€ RMA</span></span></code></pre></div><p>In your package folder, create a folder named as <code>src</code>. This is where you&#39;ll put all your package-related files. Your updated structure will look like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>â””â”€â”€ packages</span></span>
<span class="line"><span>    â””â”€â”€ Webkul</span></span>
<span class="line"><span>        â””â”€â”€ RMA</span></span>
<span class="line"><span>            â””â”€â”€ src</span></span></code></pre></div><h3 id="create-service-provider" tabindex="-1">Create Service Provider <a class="header-anchor" href="#create-service-provider" aria-label="Permalink to &quot;Create Service Provider&quot;">â€‹</a></h3><p>In the <code>src</code> folder, create a folder named as <code>Providers</code>. Inside that folder, create a file named as <code>RMAServiceProvider.php</code>. Your structure should look like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>â””â”€â”€ packages</span></span>
<span class="line"><span>    â””â”€â”€ Webkul</span></span>
<span class="line"><span>        â””â”€â”€ RMA</span></span>
<span class="line"><span>            â””â”€â”€ src</span></span>
<span class="line"><span>                â””â”€â”€ Providers</span></span>
<span class="line"><span>                    â””â”€â”€ RMAServiceProvider.php</span></span></code></pre></div><p>Copy the following code and paste it into <code>RMAServiceProvider.php</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Webkul\\RMA\\Providers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RMAServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServiceProvider</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Register services.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Bootstrap services.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> boot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Service Provider Explanation</p><p>The Service Provider is the central place to register your package&#39;s services, including routes, views, configurations, and other components. The <code>boot()</code> method is called after all services are registered, while <code>register()</code> is used to bind services into the container.</p></div><h3 id="register-your-package" tabindex="-1">Register Your Package <a class="header-anchor" href="#register-your-package" aria-label="Permalink to &quot;Register Your Package&quot;">â€‹</a></h3><h4 id="update-composer-autoloader-1" tabindex="-1">Update Composer Autoloader <a class="header-anchor" href="#update-composer-autoloader-1" aria-label="Permalink to &quot;Update Composer Autoloader&quot;">â€‹</a></h4><p>Add your package&#39;s namespace to the <code>psr-4</code> section in the <code>composer.json</code> file located in the root directory of your Bagisto application. Update it as follows:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;autoload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;psr-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Other PSR-4 namespaces</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;Webkul\\\\RMA\\\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;packages/Webkul/RMA/src&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Run the following command to regenerate the autoloader files:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dump-autoload</span></span></code></pre></div><h4 id="register-service-provider-1" tabindex="-1">Register Service Provider <a class="header-anchor" href="#register-service-provider-1" aria-label="Permalink to &quot;Register Service Provider&quot;">â€‹</a></h4><p>Register your package&#39;s service provider in the <code>bootstrap/providers.php</code> file located in the root directory of your Bagisto application. Add the following line <code>Webkul\\RMA\\Providers\\RMAServiceProvider::class,</code> just like other Bagisto service providers:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Application service providers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    App\\Providers\\AppServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Webkul&#39;s service providers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * RMA service providers.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Webkul\\RMA\\Providers\\RMAServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h4 id="final-setup-commands-1" tabindex="-1">Final Setup Commands <a class="header-anchor" href="#final-setup-commands-1" aria-label="Permalink to &quot;Final Setup Commands&quot;">â€‹</a></h4><p>Run the following command to clear the application cache:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize:clear</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Package Ready</p><p>Your package is now ready for development! Note that the <a href="#using-bagisto-package-generator">Package Generator</a> creates a more complete structure with additional boilerplate files. For a full-featured setup, consider using the Package Generator method which includes controllers, models, views, and other components automatically.</p></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">â€‹</a></h2><p>Once your package is set up, you can start building its functionality. For the remainder of this documentation, we&#39;ll assume you&#39;re following the manual setup approach, as this allows you to understand each component registration process step by step - such as routes, views, models, and controllers. While the Package Generator automates these registrations, learning the manual process helps you understand how each piece works together.</p><div class="info custom-block"><p class="custom-block-title">Learning Approach</p><p>The remaining sections will guide you through manual registration of components to provide deeper understanding of package development concepts. If you used the Package Generator, you can still follow along to understand what was automatically created for you.</p></div>`,66)]))}const g=a(t,[["render",l]]);export{k as __pageData,g as default};
