import{_ as i,a,o as t,ag as n}from"./chunks/framework.C2qfZH9T.js";const c=JSON.parse('{"title":"Understanding Product Type Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"product-type-development/understanding-product-type-configuration.md","filePath":"product-type-development/understanding-product-type-configuration.md","lastUpdated":1757593917000}'),e={name:"product-type-development/understanding-product-type-configuration.md"};function p(l,s,h,r,o,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="understanding-product-type-configuration" tabindex="-1">Understanding Product Type Configuration <a class="header-anchor" href="#understanding-product-type-configuration" aria-label="Permalink to &quot;Understanding Product Type Configuration&quot;">​</a></h1><p>Product type configuration tells Bagisto how your custom product type should behave. It&#39;s a simple array that defines the key properties and connects your configuration to your product type class.</p><div class="info custom-block"><p class="custom-block-title">What You&#39;ll Learn</p><ul><li>How the configuration file works</li><li>How Bagisto uses this configuration</li></ul></div><h2 id="basic-configuration-structure" tabindex="-1">Basic Configuration Structure <a class="header-anchor" href="#basic-configuration-structure" aria-label="Permalink to &quot;Basic Configuration Structure&quot;">​</a></h2><p>The <code>Config/product-types.php</code> file is a simple PHP array that registers your product type:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;subscription&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;key&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;class&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Webkul\\SubscriptionProduct\\Type\\Subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;sort&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h2 id="required-configuration-properties" tabindex="-1">Required Configuration Properties <a class="header-anchor" href="#required-configuration-properties" aria-label="Permalink to &quot;Required Configuration Properties&quot;">​</a></h2><p>These four properties are all you need for a basic product type:</p><table tabindex="0"><thead><tr><th>Property</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>key</code></td><td>Unique identifier (matches array key)</td><td><code>&#39;subscription&#39;</code></td></tr><tr><td><code>name</code></td><td>Display name in admin dropdown</td><td><code>&#39;Subscription&#39;</code></td></tr><tr><td><code>class</code></td><td>Full namespace to your product type class</td><td><code>&#39;Webkul\\SubscriptionProduct\\Type\\Subscription&#39;</code></td></tr><tr><td><code>sort</code></td><td>Order in dropdown (optional, default: 0)</td><td><code>5</code></td></tr></tbody></table><h2 id="how-bagisto-uses-this-configuration" tabindex="-1">How Bagisto Uses This Configuration <a class="header-anchor" href="#how-bagisto-uses-this-configuration" aria-label="Permalink to &quot;How Bagisto Uses This Configuration&quot;">​</a></h2><h3 id="_1-admin-product-creation" tabindex="-1">1. Admin Product Creation <a class="header-anchor" href="#_1-admin-product-creation" aria-label="Permalink to &quot;1. Admin Product Creation&quot;">​</a></h3><p>When you create a product in admin, Bagisto:</p><ul><li>Reads all registered product types from configuration</li><li>Shows them in the &quot;Product Type&quot; dropdown</li><li>Uses the <code>name</code> for display and <code>sort</code> for ordering</li></ul><h3 id="_2-product-type-instantiation" tabindex="-1">2. Product Type Instantiation <a class="header-anchor" href="#_2-product-type-instantiation" aria-label="Permalink to &quot;2. Product Type Instantiation&quot;">​</a></h3><p>When working with a product, Bagisto:</p><ul><li>Looks up the product&#39;s type using the <code>key</code></li><li>Creates an instance of the <code>class</code></li><li>Calls methods on that instance for product behavior</li></ul><h3 id="_3-configuration-loading" tabindex="-1">3. Configuration Loading <a class="header-anchor" href="#_3-configuration-loading" aria-label="Permalink to &quot;3. Configuration Loading&quot;">​</a></h3><p>Your service provider merges your configuration:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mergeConfigFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__DIR__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/Config/product-types.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;product_types&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // merges into config (&#39;product_types&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="multiple-product-types" tabindex="-1">Multiple Product Types <a class="header-anchor" href="#multiple-product-types" aria-label="Permalink to &quot;Multiple Product Types&quot;">​</a></h2><p>You can register multiple product types in one configuration file:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;subscription&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;key&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;class&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Webkul\\SubscriptionProduct\\Type\\Subscription&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;sort&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;rental&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;key&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rental&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Rental Product&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;class&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Webkul\\RentalProduct\\Type\\Rental&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;sort&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h2 id="what-s-next" tabindex="-1">What&#39;s Next? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s Next?&quot;">​</a></h2><p>Now that you understand how product type configuration works, let&#39;s explore the business logic:</p><p><strong>📖 <a href="./understanding-abstract-type-class.html">Understanding AbstractType Class →</a></strong><br> Learn about the key methods you can override to implement custom product behavior.</p><p><strong>📖 <a href="./building-your-subscription-product-type.html">Building Your Subscription Product Type →</a></strong><br> See how to use configuration and methods together to build a complete subscription product type.</p><div class="tip custom-block"><p class="custom-block-title">Key Takeaways</p><ul><li>Configuration is just a simple PHP array</li><li>Only 4 properties are required: <code>key</code>, <code>name</code>, <code>class</code>, <code>sort</code></li><li>Bagisto uses this to show options in admin and instantiate your classes</li><li>Keep it simple - add complexity only when needed</li></ul></div><p>The configuration system is straightforward once you understand these basics. Focus on getting the core properties right first, then enhance as needed.</p>`,28)]))}const u=i(e,[["render",p]]);export{c as __pageData,u as default};
