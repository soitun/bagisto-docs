import{_ as s,a,o as e,ag as n}from"./chunks/framework.C2qfZH9T.js";const k=JSON.parse('{"title":"Understanding Indexers","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/understanding-indexers.md","filePath":"advanced/understanding-indexers.md","lastUpdated":1757593917000}'),t={name:"advanced/understanding-indexers.md"};function l(r,i,p,h,d,o){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="understanding-indexers" tabindex="-1">Understanding Indexers <a class="header-anchor" href="#understanding-indexers" aria-label="Permalink to &quot;Understanding Indexers&quot;">​</a></h1><p>When dealing with large volumes of data and retrieving complex information like product variants and pricing, optimizing database queries becomes critical for performance. Bagisto&#39;s indexing system provides the solution.</p><div class="info custom-block"><p class="custom-block-title">What are Indexers?</p><p>Indexers create and maintain specialized data structures optimized for quick information retrieval. They analyze incoming data, extract key metadata, and store it with pointers to original data for lightning-fast searches.</p></div><h2 id="benefits-of-indexing" tabindex="-1">Benefits of Indexing <a class="header-anchor" href="#benefits-of-indexing" aria-label="Permalink to &quot;Benefits of Indexing&quot;">​</a></h2><h3 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h3><ul><li><strong>Fast Data Retrieval</strong>: Eliminates sequential data scanning</li><li><strong>Optimized Queries</strong>: Reduces database load and response times</li><li><strong>Scalable Operations</strong>: Handles large datasets efficiently</li></ul><h3 id="enhanced-user-experience" tabindex="-1">Enhanced User Experience <a class="header-anchor" href="#enhanced-user-experience" aria-label="Permalink to &quot;Enhanced User Experience&quot;">​</a></h3><ul><li><strong>Quick Search Results</strong>: Users find products instantly</li><li><strong>Real-time Updates</strong>: Pricing and inventory reflect immediately</li><li><strong>Consistent Data</strong>: Synchronized information across all channels</li></ul><h2 id="essential-indexers-in-bagisto" tabindex="-1">Essential Indexers in Bagisto <a class="header-anchor" href="#essential-indexers-in-bagisto" aria-label="Permalink to &quot;Essential Indexers in Bagisto&quot;">​</a></h2><p>Bagisto implements several specialized indexers to maintain optimal performance across different data types:</p><h3 id="price-indexing" tabindex="-1">Price Indexing <a class="header-anchor" href="#price-indexing" aria-label="Permalink to &quot;Price Indexing&quot;">​</a></h3><p>Price indexing ensures accurate product pricing across your entire storefront, handling complex pricing scenarios efficiently.</p><div class="tip custom-block"><p class="custom-block-title">Key Features</p><ul><li><strong>Real-time Updates</strong>: Prices reflect immediately when changed</li><li><strong>Rule Integration</strong>: Automatically applies catalog pricing rules</li><li><strong>Multi-channel Support</strong>: Consistent pricing across all sales channels</li></ul></div><p><strong>How it Works:</strong> The price indexing process updates product prices in the database whenever changes occur, ensuring accurate price information across the storefront and maintaining consistency with promotional rules.</p><h3 id="inventory-indexing" tabindex="-1">Inventory Indexing <a class="header-anchor" href="#inventory-indexing" aria-label="Permalink to &quot;Inventory Indexing&quot;">​</a></h3><p>Manages real-time inventory tracking and stock level synchronization across all sales channels.</p><p><strong>Automatic Inventory Management:</strong></p><ul><li><strong>Restock Operations</strong>: Quantities update when new stock arrives</li><li><strong>Return Processing</strong>: Inventory increases when products are returned</li><li><strong>Real-time Sync</strong>: Inventory levels remain accurate across all touchpoints</li></ul><div class="warning custom-block"><p class="custom-block-title">Stock Accuracy</p><p>Inventory indexing prevents overselling by maintaining real-time stock levels. Always ensure indexers are running properly to avoid inventory discrepancies.</p></div><h3 id="flat-indexing" tabindex="-1">Flat Indexing <a class="header-anchor" href="#flat-indexing" aria-label="Permalink to &quot;Flat Indexing&quot;">​</a></h3><p>Optimizes product data retrieval by creating denormalized flat tables for faster query performance.</p><p><strong>Performance Benefits:</strong></p><ul><li><strong>Batch Processing</strong>: Handles large datasets efficiently without system overload</li><li><strong>Attribute Management</strong>: Manages fillable attribute codes during index creation</li><li><strong>Multi-locale Support</strong>: Accurate indexing for different markets and languages</li></ul><p><strong>Manual Re-indexing:</strong> When channels or locales change, manually trigger re-indexing to ensure flat tables reflect updates:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> indexer:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=flat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode=full</span></span></code></pre></div><h3 id="catalog-rule-indexing" tabindex="-1">Catalog Rule Indexing <a class="header-anchor" href="#catalog-rule-indexing" aria-label="Permalink to &quot;Catalog Rule Indexing&quot;">​</a></h3><p>Maintains accurate pricing by applying catalog rules, promotions, and discounts consistently across the store.</p><p><strong>Automated Scheduling:</strong></p><ul><li><strong>Daily Execution</strong>: Runs automatically at 00:01 every day</li><li><strong>Rule Validation</strong>: Ensures expired promotions are removed</li><li><strong>Price Recalculation</strong>: Updates product prices based on active rules</li><li><strong>Zero Maintenance</strong>: No manual intervention required</li></ul><div class="info custom-block"><p class="custom-block-title">Scheduling Details</p><p>The catalog rule indexer runs daily to ensure promotional pricing remains accurate. This prevents expired offers from displaying incorrect prices.</p></div><h3 id="elasticsearch-integration" tabindex="-1">Elasticsearch Integration <a class="header-anchor" href="#elasticsearch-integration" aria-label="Permalink to &quot;Elasticsearch Integration&quot;">​</a></h3><p>Leverages Elasticsearch&#39;s powerful search capabilities to provide fast, scalable product search functionality.</p><p><strong>Advanced Search Features:</strong></p><ul><li><strong>Full-text Search</strong>: Comprehensive product content indexing</li><li><strong>Faceted Navigation</strong>: Dynamic filtering and categorization</li><li><strong>Autocomplete</strong>: Real-time search suggestions</li><li><strong>Analytics</strong>: Search performance and user behavior insights</li></ul><div class="tip custom-block"><p class="custom-block-title">Performance Impact</p><p>Elasticsearch can handle millions of products while maintaining sub-second search response times. Perfect for large catalogs and complex search requirements.</p></div><p><strong>Configuration Reference:</strong> For detailed Elasticsearch setup, see <a href="./../performance/configure-elasticsearch.html">Configure Elasticsearch</a> guide.</p><h2 id="managing-indexers" tabindex="-1">Managing Indexers <a class="header-anchor" href="#managing-indexers" aria-label="Permalink to &quot;Managing Indexers&quot;">​</a></h2><h3 id="re-indexing-commands" tabindex="-1">Re-indexing Commands <a class="header-anchor" href="#re-indexing-commands" aria-label="Permalink to &quot;Re-indexing Commands&quot;">​</a></h3><p>The <code>indexer:index</code> console command provides flexible re-indexing capabilities to maintain optimal data performance.</p><h4 id="command-syntax" tabindex="-1">Command Syntax <a class="header-anchor" href="#command-syntax" aria-label="Permalink to &quot;Command Syntax&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> indexer:index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {--type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {--mode=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><code>--type</code>: Specifies which indexers to reindex (optional)</li><li><code>--mode</code>: Sets reindexing mode - <code>full</code> or <code>selective</code> (default: selective)</li></ul><h3 id="common-re-indexing-operations" tabindex="-1">Common Re-indexing Operations <a class="header-anchor" href="#common-re-indexing-operations" aria-label="Permalink to &quot;Common Re-indexing Operations&quot;">​</a></h3><h4 id="full-re-indexing-all-types" tabindex="-1">Full Re-indexing (All Types) <a class="header-anchor" href="#full-re-indexing-all-types" aria-label="Permalink to &quot;Full Re-indexing (All Types)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Rebuilds all indexes completely</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> indexer:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode=full</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">When to Use Full Re-indexing</p><p>Use full re-indexing after major data imports, structural changes, or when troubleshooting index corruption issues.</p></div><h4 id="selective-re-indexing-specific-type" tabindex="-1">Selective Re-indexing (Specific Type) <a class="header-anchor" href="#selective-re-indexing-specific-type" aria-label="Permalink to &quot;Selective Re-indexing (Specific Type)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Re-index only price data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> indexer:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=price</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Re-index only inventory data  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> indexer:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=inventory</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Re-index only flat tables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> indexer:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=flat</span></span></code></pre></div><h3 id="automated-scheduling" tabindex="-1">Automated Scheduling <a class="header-anchor" href="#automated-scheduling" aria-label="Permalink to &quot;Automated Scheduling&quot;">​</a></h3><p>Bagisto automatically schedules critical indexers to maintain data accuracy:</p><table tabindex="0"><thead><tr><th><strong>Indexer</strong></th><th><strong>Schedule</strong></th><th><strong>Purpose</strong></th></tr></thead><tbody><tr><td><strong>Price Indexer</strong></td><td>Daily at 00:01</td><td>Updates product pricing</td></tr><tr><td><strong>Catalog Rules</strong></td><td>Daily at 00:01</td><td>Applies promotional pricing</td></tr></tbody></table><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Scheduled commands in Laravel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$schedule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;indexer:index --type=price&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dailyAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;00:01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$schedule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;product:price-rule:index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dailyAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;00:01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Production Requirement</p><p>For automated scheduling to work in production, ensure you have added the Laravel scheduler cron entry to your server&#39;s crontab:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cd /path-to-your-project &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schedule:run</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span></span></code></pre></div><p>Without this cron entry, the automated indexer scheduling will not function properly.</p></div><h2 id="practical-implementation" tabindex="-1">Practical Implementation <a class="header-anchor" href="#practical-implementation" aria-label="Permalink to &quot;Practical Implementation&quot;">​</a></h2><p>Understanding indexers conceptually is important, but seeing how they work in real Bagisto code provides valuable insights for developers working with the system.</p><h3 id="how-indexers-work-in-practice" tabindex="-1">How Indexers Work in Practice <a class="header-anchor" href="#how-indexers-work-in-practice" aria-label="Permalink to &quot;How Indexers Work in Practice&quot;">​</a></h3><p>Bagisto uses event listeners to automatically trigger indexing when products are created, updated, or deleted. Here&#39;s how the system maintains data consistency:</p><div class="info custom-block"><p class="custom-block-title">Example Use Case</p><p>The following examples demonstrate indexing implementation from the <strong>Product Listener</strong> - one of many indexing scenarios in Bagisto. Similar indexing patterns are used throughout the system.</p></div><h4 id="automatic-index-updates" tabindex="-1">Automatic Index Updates <a class="header-anchor" href="#automatic-index-updates" aria-label="Permalink to &quot;Automatic Index Updates&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Product Listener Example - Real Bagisto Implementation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> afterCreate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($product)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Refresh flat index immediately</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flatIndexer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($product);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Get all related product IDs (variants, bundles, grouped)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $productIds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAllRelatedProductIds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($product);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Queue Elasticsearch indexing</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    UpdateCreateElasticSearchIndexJob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="chained-index-operations" tabindex="-1">Chained Index Operations <a class="header-anchor" href="#chained-index-operations" aria-label="Permalink to &quot;Chained Index Operations&quot;">​</a></h4><p>When products are updated, multiple indexers run in sequence to maintain data consistency:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> afterUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($product)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Update flat index first</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flatIndexer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($product);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $productIds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAllRelatedProductIds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($product);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Chain indexing jobs for optimal performance</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Bus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UpdateCreateInventoryIndexJob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UpdateCreatePriceIndexJob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds), </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UpdateCreateElasticSearchIndexJob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="event-driven-indexing" tabindex="-1">Event-Driven Indexing <a class="header-anchor" href="#event-driven-indexing" aria-label="Permalink to &quot;Event-Driven Indexing&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">Automatic Updates</p><p>Bagisto automatically triggers indexing through Laravel events:</p><ul><li><strong>Product Created</strong>: Flat and Elasticsearch indexes update</li><li><strong>Product Updated</strong>: Inventory, Price, and Elasticsearch indexes update in sequence</li><li><strong>Product Deleted</strong>: Elasticsearch index removes product data</li></ul></div><h3 id="performance-optimization-strategies" tabindex="-1">Performance Optimization Strategies <a class="header-anchor" href="#performance-optimization-strategies" aria-label="Permalink to &quot;Performance Optimization Strategies&quot;">​</a></h3><p>Before diving into optimization strategies, it&#39;s important to understand that Bagisto&#39;s indexers are designed to keep your storefront responsive and data accurate, even as your catalog grows. By leveraging event-driven updates, background job queues, and batch processing, Bagisto ensures that indexing operations do not impact the user experience or slow down your application.</p><h4 id="job-queuing" tabindex="-1">Job Queuing <a class="header-anchor" href="#job-queuing" aria-label="Permalink to &quot;Job Queuing&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Jobs are queued to prevent blocking user interactions</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UpdateCreateElasticSearchIndexJob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Chained jobs ensure proper sequence</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UpdateCreateInventoryIndexJob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UpdateCreatePriceIndexJob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="batch-processing" tabindex="-1">Batch Processing <a class="header-anchor" href="#batch-processing" aria-label="Permalink to &quot;Batch Processing&quot;">​</a></h4><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Process multiple products efficiently</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$productIds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple product IDs</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UpdateCreatePriceIndexJob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($productIds);</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Development Best Practices</p><ul><li><strong>Queue Workers</strong>: Ensure queue workers are running for background indexing</li><li><strong>Error Handling</strong>: Monitor failed jobs and implement retry mechanisms</li><li><strong>Performance Testing</strong>: Test indexing performance with large product datasets</li><li><strong>Event Monitoring</strong>: Log indexing events for debugging and optimization</li></ul></div><h3 id="monitoring-index-health" tabindex="-1">Monitoring Index Health <a class="header-anchor" href="#monitoring-index-health" aria-label="Permalink to &quot;Monitoring Index Health&quot;">​</a></h3><p>Before relying on indexers in a production environment, it&#39;s important to monitor their health and ensure all background processes are running smoothly. Regular checks help prevent data inconsistencies and performance bottlenecks.</p><h4 id="check-queue-status" tabindex="-1">Check Queue Status <a class="header-anchor" href="#check-queue-status" aria-label="Permalink to &quot;Check Queue Status&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Monitor indexing job queues</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> queue:work</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --queue=default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check failed indexing jobs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> queue:failed</span></span></code></pre></div><h4 id="debug-index-issues" tabindex="-1">Debug Index Issues <a class="header-anchor" href="#debug-index-issues" aria-label="Permalink to &quot;Debug Index Issues&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clear failed jobs and retry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> queue:retry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Monitor real-time indexing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> queue:listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span></code></pre></div>`,79)]))}const g=s(t,[["render",l]]);export{k as __pageData,g as default};
