import{_ as e,a as o,o as r,ag as a}from"./chunks/framework.C2qfZH9T.js";const h=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"product-type-development/getting-started.md","filePath":"product-type-development/getting-started.md","lastUpdated":1759842771000}'),i={name:"product-type-development/getting-started.md"};function s(n,t,l,d,p,c){return r(),o("div",null,t[0]||(t[0]=[a(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">â€‹</a></h1><p>Creating custom product types in Bagisto allows you to define specialized product behaviors that perfectly match your business needs. Whether you need subscription products, rental items, digital services, or complex product variations, custom product types provide the flexibility to create exactly what your store requires.</p><p>For our tutorial, we&#39;ll create a <strong>Subscription Product</strong> type that demonstrates all the essential concepts you need to build any type of custom product solution.</p><div class="info custom-block"><p class="custom-block-title">What You&#39;ll Learn</p><p>By the end of this guide, you&#39;ll be able to:</p><ul><li>Understand Bagisto&#39;s product type architecture</li><li>Create custom product types step by step</li><li>Configure product type properties and behaviors</li><li>Implement custom business logic for specialized products</li></ul></div><h2 id="understanding-bagisto-product-type-architecture" tabindex="-1">Understanding Bagisto Product Type Architecture <a class="header-anchor" href="#understanding-bagisto-product-type-architecture" aria-label="Permalink to &quot;Understanding Bagisto Product Type Architecture&quot;">â€‹</a></h2><p>Bagisto&#39;s product system is built around a flexible type-based architecture that separates product behavior from data storage:</p><h3 id="core-components" tabindex="-1">Core Components <a class="header-anchor" href="#core-components" aria-label="Permalink to &quot;Core Components&quot;">â€‹</a></h3><table tabindex="0"><thead><tr><th>Component</th><th>Purpose</th><th>Location</th></tr></thead><tbody><tr><td><strong>Product Types Configuration</strong></td><td>Defines product type properties</td><td><code>Config/product-types.php</code></td></tr><tr><td><strong>Product Type Classes</strong></td><td>Contains business logic for product behavior</td><td><code>Type/ClassName.php</code></td></tr><tr><td><strong><code>AbstractType</code> Base Class</strong></td><td>Provides core functionality</td><td>Extended by custom classes</td></tr><tr><td><strong>Service Provider</strong></td><td>Registers product type</td><td><code>Providers/ServiceProvider.php</code></td></tr></tbody></table><h3 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">â€‹</a></h3><ul><li><strong>Flexible Product Behavior</strong>: Custom logic for pricing, inventory, cart operations</li><li><strong>Type-specific Validation</strong>: Different validation rules per product type</li><li><strong>Custom Attributes</strong>: Type-specific product attributes and fields</li><li><strong>Admin Integration</strong>: Seamless integration with product creation interface</li></ul><h2 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">â€‹</a></h2><p>The typical workflow for creating a custom product type follows these steps:</p><h3 id="_1-create-your-product-type" tabindex="-1">1. Create Your Product Type <a class="header-anchor" href="#_1-create-your-product-type" aria-label="Permalink to &quot;1. Create Your Product Type&quot;">â€‹</a></h3><p>Build a complete working product type with all essential components.</p><p><strong>ðŸ“– <a href="./create-your-first-product-type.html">Create Your First Product Type â†’</a></strong></p><p>This section shows you how to build a complete working product type, then the remaining sections help you understand how to customize each component.</p><h3 id="_2-understand-product-type-configuration" tabindex="-1">2. Understand Product Type Configuration <a class="header-anchor" href="#_2-understand-product-type-configuration" aria-label="Permalink to &quot;2. Understand Product Type Configuration&quot;">â€‹</a></h3><p>Learn how product type configuration works and how to customize product type properties.</p><p><strong>ðŸ“– Next:</strong> <a href="./understanding-product-type-configuration.html">Understanding Product Type Configuration</a></p><h3 id="_3-understand-abstracttype-methods" tabindex="-1">3. Understand AbstractType Methods <a class="header-anchor" href="#_3-understand-abstracttype-methods" aria-label="Permalink to &quot;3. Understand AbstractType Methods&quot;">â€‹</a></h3><p>Master the key methods available for implementing custom product behavior and business logic.</p><p><strong>ðŸ“– Next:</strong> <a href="./understanding-abstract-type-class.html">Understanding AbstractType Class</a></p><h3 id="_4-build-complete-implementation" tabindex="-1">4. Build Complete Implementation <a class="header-anchor" href="#_4-build-complete-implementation" aria-label="Permalink to &quot;4. Build Complete Implementation&quot;">â€‹</a></h3><p>See how to put it all together in a production-ready subscription product type.</p><p><strong>ðŸ“– Next:</strong> <a href="./building-your-subscription-product-type.html">Building Your Subscription Product Type</a></p><p>You&#39;ll have a complete working product type after step 1, and steps 2-4 help you understand how to customize and extend it.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">â€‹</a></h2><p>Before you begin, ensure you have:</p><ul><li><strong>Bagisto Installation</strong>: A working Bagisto development environment</li><li><strong>PHP Knowledge</strong>: Familiarity with PHP 8.2+ and Laravel concepts</li><li><strong>Package Development</strong>: Basic understanding of Laravel service providers (<a href="./../package-development/getting-started.html">Package Development Guide</a>)</li><li><strong>Development Tools</strong>: Composer, Git, and a code editor</li></ul><div class="tip custom-block"><p class="custom-block-title">Quick Start Path</p><p><strong>New to Bagisto?</strong> Start with the <a href="./create-your-first-product-type.html">step-by-step creation guide</a> for your first product type.</p><p><strong>Want to understand everything?</strong> Follow the complete manual setup to learn every component in detail.</p></div><h2 id="what-you-ll-build" tabindex="-1">What You&#39;ll Build <a class="header-anchor" href="#what-you-ll-build" aria-label="Permalink to &quot;What You&#39;ll Build&quot;">â€‹</a></h2><p>Throughout this guide, you&#39;ll create a <strong>Subscription Product</strong> type that includes:</p><h3 id="core-features" tabindex="-1">Core Features <a class="header-anchor" href="#core-features" aria-label="Permalink to &quot;Core Features&quot;">â€‹</a></h3><ul><li>âœ… <strong>Basic Product Behavior</strong>: Subscription-specific logic and validation</li><li>âœ… <strong>Inventory Management</strong>: Service-based products without traditional stock</li><li>âœ… <strong>Admin Configuration</strong>: Complete settings interface in Bagisto admin</li><li>âœ… <strong>Cart Integration</strong>: Subscription-specific cart preparation</li></ul><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">â€‹</a></h2><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Subscription Product Type Package</span></span>
<span class="line"><span>â”œâ”€â”€ src/</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ Type/</span></span>
<span class="line"><span>â”‚   â”‚   â””â”€â”€ Subscription.php              # Product type logic</span></span>
<span class="line"><span>â”‚   â”œâ”€â”€ Config/</span></span>
<span class="line"><span>â”‚   â”‚   â””â”€â”€ product_types.php             # Product type definition</span></span>
<span class="line"><span>â”‚   â””â”€â”€ Providers/</span></span>
<span class="line"><span>â”‚       â””â”€â”€ ServiceProvider.php           # Package registration</span></span>
<span class="line"><span>â”œâ”€â”€ composer.json                         # Package metadata</span></span>
<span class="line"><span>â””â”€â”€ README.md                             # Documentation</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Development Time Estimate</p><ul><li><strong>Basic Implementation</strong>: 1-2 hours (manual setup)</li><li><strong>Custom Logic</strong>: 2-3 hours (business logic + validation)</li><li><strong>Testing &amp; Polish</strong>: 1-2 hours (admin testing, cart validation)</li></ul></div><h2 id="built-in-product-types-reference" tabindex="-1">Built-in Product Types Reference <a class="header-anchor" href="#built-in-product-types-reference" aria-label="Permalink to &quot;Built-in Product Types Reference&quot;">â€‹</a></h2><p>Understanding Bagisto&#39;s built-in product types helps you decide what to customize:</p><h3 id="simple-products" tabindex="-1">Simple Products <a class="header-anchor" href="#simple-products" aria-label="Permalink to &quot;Simple Products&quot;">â€‹</a></h3><ul><li><strong>Use Case</strong>: Basic products with straightforward pricing and inventory</li><li><strong>Features</strong>: Standard pricing, inventory tracking, simple cart behavior</li></ul><h3 id="configurable-products" tabindex="-1">Configurable Products <a class="header-anchor" href="#configurable-products" aria-label="Permalink to &quot;Configurable Products&quot;">â€‹</a></h3><ul><li><strong>Use Case</strong>: Products with variations (size, color, etc.)</li><li><strong>Features</strong>: Variant management, attribute-based pricing</li></ul><h3 id="virtual-products" tabindex="-1">Virtual Products <a class="header-anchor" href="#virtual-products" aria-label="Permalink to &quot;Virtual Products&quot;">â€‹</a></h3><ul><li><strong>Use Case</strong>: Non-physical products or services</li><li><strong>Features</strong>: No shipping required, downloadable content</li></ul><h3 id="grouped-products" tabindex="-1">Grouped Products <a class="header-anchor" href="#grouped-products" aria-label="Permalink to &quot;Grouped Products&quot;">â€‹</a></h3><ul><li><strong>Use Case</strong>: Related products sold together</li><li><strong>Features</strong>: Bundle pricing, component selection</li></ul><h2 id="when-to-create-custom-product-types" tabindex="-1">When to Create Custom Product Types <a class="header-anchor" href="#when-to-create-custom-product-types" aria-label="Permalink to &quot;When to Create Custom Product Types&quot;">â€‹</a></h2><p>Consider creating a custom product type when:</p><ul><li>âœ… <strong>Unique Behavior</strong>: Your products need behavior not covered by built-in types</li><li>âœ… <strong>Special Pricing</strong>: Complex pricing models or calculations</li><li>âœ… <strong>Custom Attributes</strong>: Type-specific fields and validation rules</li><li>âœ… <strong>Business Rules</strong>: Specific business logic for product handling</li></ul><h2 id="ready-to-start" tabindex="-1">Ready to Start? <a class="header-anchor" href="#ready-to-start" aria-label="Permalink to &quot;Ready to Start?&quot;">â€‹</a></h2><p>Choose your learning path and begin building your custom product type:</p><p><strong>ðŸš€ <a href="./create-your-first-product-type.html">Create Your First Product Type â†’</a></strong></p><p>This section covers the manual setup approach, helping you understand the foundations while building a working subscription product type.</p>`,54)]))}const g=e(i,[["render",s]]);export{h as __pageData,g as default};
