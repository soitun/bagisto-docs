import{_ as i,a,o as t,ag as e}from"./chunks/framework.C2qfZH9T.js";const k=JSON.parse('{"title":"🤝 Contribution Guide","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/contribution-guide.md","filePath":"getting-started/contribution-guide.md","lastUpdated":1759842771000}'),n={name:"getting-started/contribution-guide.md"};function l(r,s,h,p,o,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="🤝-contribution-guide" tabindex="-1">🤝 Contribution Guide <a class="header-anchor" href="#🤝-contribution-guide" aria-label="Permalink to &quot;🤝 Contribution Guide&quot;">​</a></h1><p>Welcome to the Bagisto community! We appreciate your interest in contributing to our open-source e-commerce platform.</p><h2 id="🐛-bug-reports" tabindex="-1">🐛 Bug Reports <a class="header-anchor" href="#🐛-bug-reports" aria-label="Permalink to &quot;🐛 Bug Reports&quot;">​</a></h2><p>We highly value active collaboration among our community members to continually enhance Bagisto&#39;s performance and reliability.</p><h3 id="reporting-guidelines" tabindex="-1">Reporting Guidelines <a class="header-anchor" href="#reporting-guidelines" aria-label="Permalink to &quot;Reporting Guidelines&quot;">​</a></h3><p>When filing a bug report, please include:</p><ul><li><strong>Clear Title</strong>: Descriptive and specific</li><li><strong>Detailed Description</strong>: Explain the problem thoroughly</li><li><strong>Reproduction Steps</strong>: Step-by-step instructions</li><li><strong>Code Sample</strong>: Minimal code that reproduces the issue</li><li><strong>Environment Details</strong>: OS, PHP version, Bagisto version</li></ul><h2 id="💡-feature-requests" tabindex="-1">💡 Feature Requests <a class="header-anchor" href="#💡-feature-requests" aria-label="Permalink to &quot;💡 Feature Requests&quot;">​</a></h2><p>We welcome proposals for new features and enhancements!</p><h3 id="feature-proposal-process" tabindex="-1">Feature Proposal Process <a class="header-anchor" href="#feature-proposal-process" aria-label="Permalink to &quot;Feature Proposal Process&quot;">​</a></h3><ol><li><strong>Check Existing Issues</strong>: Search for similar requests</li><li><strong>Create Detailed Proposal</strong>: Include use cases and implementation ideas</li><li><strong>Discuss with Community</strong>: Engage in issue discussions</li><li><strong>Submit Implementation</strong>: Provide code contribution</li></ol><h2 id="🌿-branch-selection" tabindex="-1">🌿 Branch Selection <a class="header-anchor" href="#🌿-branch-selection" aria-label="Permalink to &quot;🌿 Branch Selection&quot;">​</a></h2><p>Choose the appropriate branch for your contribution:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-juIvp" id="tab-FIYM0L_" checked><label data-title="Bug Fixes" for="tab-FIYM0L_">Bug Fixes</label><input type="radio" name="group-juIvp" id="tab-CrT_sNd"><label data-title="Critical Fixes" for="tab-CrT_sNd">Critical Fixes</label><input type="radio" name="group-juIvp" id="tab-kqMlwQY"><label data-title="Breaking Changes" for="tab-kqMlwQY">Breaking Changes</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For general bug fixes (stable branch)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v2.3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fix/issue-description</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For critical bugs in stable version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v2.3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hotfix/critical-issue</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For new features and breaking changes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/new-functionality</span></span></code></pre></div></div></div><h3 id="branch-guidelines" tabindex="-1">Branch Guidelines <a class="header-anchor" href="#branch-guidelines" aria-label="Permalink to &quot;Branch Guidelines&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Type</th><th>Target Branch</th><th>Description</th></tr></thead><tbody><tr><td>🐛 <strong>Bug Fixes</strong></td><td><code>v2.3</code> (stable)</td><td>General bug fixes for stable release</td></tr><tr><td>🚨 <strong>Critical Fixes</strong></td><td><code>v2.3</code> (stable)</td><td>Security or critical issues</td></tr><tr><td>✨ <strong>Breaking Changes</strong></td><td><code>master</code></td><td>New features with potential breaking changes</td></tr></tbody></table><h2 id="🎨-styling-guidelines" tabindex="-1">🎨 Styling Guidelines <a class="header-anchor" href="#🎨-styling-guidelines" aria-label="Permalink to &quot;🎨 Styling Guidelines&quot;">​</a></h2><h3 id="tailwind-css-class-ordering" tabindex="-1">Tailwind CSS Class Ordering <a class="header-anchor" href="#tailwind-css-class-ordering" aria-label="Permalink to &quot;Tailwind CSS Class Ordering&quot;">​</a></h3><p>Maintain consistency in Tailwind CSS class organization following <a href="https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted" target="_blank" rel="noreferrer">Tailwind&#39;s official sorting guidelines</a>:</p><p><strong>Recommended Class Order</strong>:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Layout → Flexbox → Spacing → Sizing → Typography → Visual → Misc --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex flex-col justify-center items-center p-4 w-full h-screen text-lg font-bold bg-white border rounded-lg shadow-md hover:shadow-lg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Content here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Class Sorting Reference</p><p>For detailed information about how classes should be sorted, refer to the <a href="https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted" target="_blank" rel="noreferrer">official Tailwind CSS class sorting guide</a>.</p></div><h2 id="🧪-testing" tabindex="-1">🧪 Testing <a class="header-anchor" href="#🧪-testing" aria-label="Permalink to &quot;🧪 Testing&quot;">​</a></h2><h3 id="running-tests" tabindex="-1">Running Tests <a class="header-anchor" href="#running-tests" aria-label="Permalink to &quot;Running Tests&quot;">​</a></h3><p>Ensure all tests pass before submitting your pull request:</p><p><strong>Pest Tests (Unit/Feature Tests):</strong></p><p>To run Pest tests, navigate to your project&#39;s root directory and use the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run the full test suite</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run specific test files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/Feature/YourTestFile.php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run tests with coverage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --coverage</span></span></code></pre></div><p><strong>Playwright Tests (End-to-End Tests):</strong></p><p>To run Playwright tests, navigate to the root directory of either the <code>Shop</code> or <code>Admin</code> package, then execute:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run Playwright tests from the package root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config=tests/e2e-pw/playwright.config.ts</span></span></code></pre></div><p>This command will execute all end-to-end tests defined in the Playwright configuration for the selected package.</p><div class="tip custom-block"><p class="custom-block-title">Prerequisite</p><p>Before running Playwright tests, ensure you have both <code>npx</code> and <code>playwright</code> installed in your development environment.</p></div><p><strong>Pint Tests (Code Formatting):</strong></p><p>Pint is a PHP code style fixer that helps maintain consistent formatting across the codebase. It automatically applies standards like PSR-2 and PSR-12, making your code cleaner and easier to review. Before committing, run Pint to ensure your changes follow the project&#39;s coding standards.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check code formatting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vendor/bin/pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fix code formatting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vendor/bin/pint</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Important</p><p>All three test types (Pest, Playwright, and Pint) must pass before your PR can be merged. Run tests locally to avoid CI failures.</p></div><h2 id="📝-coding-standards" tabindex="-1">📝 Coding Standards <a class="header-anchor" href="#📝-coding-standards" aria-label="Permalink to &quot;📝 Coding Standards&quot;">​</a></h2><p>Bagisto follows established PHP standards for consistency and readability:</p><h3 id="standards-we-follow" tabindex="-1">Standards We Follow <a class="header-anchor" href="#standards-we-follow" aria-label="Permalink to &quot;Standards We Follow&quot;">​</a></h3><ul><li><strong><a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md" target="_blank" rel="noreferrer">PSR-2</a></strong> - Coding Style Guide</li><li><strong><a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md" target="_blank" rel="noreferrer">PSR-4</a></strong> - Autoloading Standard</li></ul><h3 id="phpdoc-example" tabindex="-1">PHPDoc Example <a class="header-anchor" href="#phpdoc-example" aria-label="Permalink to &quot;PHPDoc Example&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Register a service with CoreServiceProvider.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">array</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  $loader</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\Closure</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">null</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  $concrete</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  $shared</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> registerFacades</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($loader, $concrete </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $shared </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Implementation here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Automatic Formatting</p><p>You can use Pint to automatically format your code according to these standards:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vendor/bin/pint</span></span></code></pre></div></div><h2 id="🔒-security-vulnerabilities" tabindex="-1">🔒 Security Vulnerabilities <a class="header-anchor" href="#🔒-security-vulnerabilities" aria-label="Permalink to &quot;🔒 Security Vulnerabilities&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">Security Issues</p><p>If you discover a security vulnerability, <strong>DO NOT</strong> create a public issue.</p></div><p><strong>Contact</strong>: Email <a href="mailto:support@bagisto.com" target="_blank" rel="noreferrer">support@bagisto.com</a> immediately</p><h3 id="security-report-should-include" tabindex="-1">Security Report Should Include: <a class="header-anchor" href="#security-report-should-include" aria-label="Permalink to &quot;Security Report Should Include:&quot;">​</a></h3><ul><li>Detailed description of the vulnerability</li><li>Steps to reproduce the issue</li><li>Potential impact assessment</li><li>Suggested fix (if available)</li></ul><p>Thank you for contributing to Bagisto! 🎉</p>`,50)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
